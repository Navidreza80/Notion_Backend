generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                  String  @id
  user_id             String
  provider            String
  provider_account_id String
  access_token        String?
  refresh_token       String?
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String?
  session_state       String?
  type                String
  User                User    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id])
}

model Session {
  id            String   @id
  user_id       String
  session_token String   @unique
  expires       DateTime
  User          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model User {
  id             String      @id
  name           String?
  email          String?     @unique
  email_verified DateTime?
  image          String?
  Account        Account[]
  Project        Project[]
  Session        Session[]
  Workspace      Workspace[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@id([identifier, token])
}

model Workspace {
  id        String   @id
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime
  creatorId String
  User      User     @relation(fields: [creatorId], references: [id], onDelete: Cascade)

  @@index([creatorId])
}

model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  userId      String
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum WorkspaceRole {
  MEMBER
  ADMIN
}
